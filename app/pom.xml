<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.6.4</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>br.edu.devdojo2</groupId>
	<artifactId>app</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>app</name>
	<description>Demo project for Spring Boot</description>
	<properties>
		<java.version>11</java.version>
		<org.mapstruct.version>1.5.5.Final</org.mapstruct.version>
		<springdoc-openapi-ui.version>1.7.0</springdoc-openapi-ui.version>
		<springdoc-openapi-data-rest.version>1.7.0</springdoc-openapi-data-rest.version>
		<jib-maven-plugin.version>3.3.1</jib-maven-plugin.version>
		<docker.distroless.image>gcr.io/distroless/java:11</docker.distroless.image>
		<!--proprio registro do docker-->
		<docker.repo.url>registry.hub.docker.com/ewmurakoshi</docker.repo.url>
		<!--https://hub.docker.com/repositories/ewmurakoshi-->
		<docker.repo.project>app-springboot-anime</docker.repo.project>
		<docker.image.name>${docker.repo.url}/${docker.repo.project}</docker.image.name>
		<spring-boot-starter-redis.version>1.4.2.RELEASE</spring-boot-starter-redis.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-redis</artifactId>
			<version>${spring-boot-starter-redis.version}</version>
		</dependency>
		<!--https://docs.spring.io/spring-boot/docs/current/reference/html/actuator.html
		Sempre que executar a aplicação, usar na URL com final "/actuator/health" para
		saber o status da aplicação. Ver mais informações no tópico ENDPOINTS do site-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>
		<!--https://springdoc.org/-->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-ui</artifactId>
			<version>${springdoc-openapi-ui.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-data-rest</artifactId>
			<version>${springdoc-openapi-ui.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-security</artifactId>
			<version>${springdoc-openapi-ui.version}</version>
		</dependency>
		<!--O unico problema dessa lib é que toda vez que iniciarmos
		a aplicação, a senha será diferente. A solução para isso é
		criarmos uma autenticação do usuário em memória.-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<!--dependencia que nos fornece libs que farão a validação
			dos nossos campos-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!--dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
		</dependency-->
		<!--Essa dependencia faz com que o spring habilite o
		hotswap-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
		</dependency>
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<scope>runtime</scope>
			<version>8.0.32</version>
		</dependency>
		<!--Para testes unitários-->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${org.mapstruct.version}</version>
		</dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.9.0</version>
        </dependency>
    </dependencies>
	<!--maven profiles para execução de testes, unitarios e integração,
	de forma separada, pois sabemos que os testes integrados demora um
	tempos consideravelmente maior que os unitários-->
	<profiles>
		<profile>
			<id>integration-tests</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.google.cloud.tools</groupId>
						<artifactId>jib-maven-plugin</artifactId>
						<version>${jib-maven-plugin.version}</version>
						<configuration>
							<from>
								<image>${docker.distroless.image}</image>
							</from>
							<to>
								<image>${docker.image.name}</image>
								<tags>
									<tag>${project.version}</tag>
								</tags>
							</to>
							<container>
								<mainClass>br.edu.devdojo2.app.AppApplication</mainClass>
							</container>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<includes>
								<!--Qualquer arquivo que houver Integ, indica
								que é uma classe de testes de integração, no caso,
								pelo comando mvn test -P${id}-->
								<include>**/*Integ.**</include>
							</includes>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>9</source> <!-- depending on your project -->
					<target>9</target> <!-- depending on your project -->
					<annotationProcessorPaths>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${org.mapstruct.version}</version>
						</path>
						<!-- other annotation processors -->
					</annotationProcessorPaths>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.2</version>
				<configuration>
					<skipTests>true</skipTests>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
